Series:
	一种类似于一维数组的对象，是由一组的数据以及一组与之相关的数据标签（即索引）组成。注意：Series中的索引值是可以重复的。
	
	创建方法：
		pd.Series(arr)
			通过数组创建Series的时候，如果没有为数据指定索引的话，会自动创建一个0到N-1的整数索引
		pd.Series(data=[11,22,33],dtype=np.float64,index=['a','b','c'])
			明确给定数据及索引值
		pd.Series(dict)
			通过字典创建Series时，字典中的key组成Series中的索引，字典中的value组成Series中的values
		
		
	属性：
		Series.dtype	
		Series.index
			Series.index=['a','b','c']	Series对象创建好后可以通过index修改索引值
		Series.values
		Series.name
		Series.index.name
	
	值获取：
		方括号+索引的方式读取对应索引的的数据，有可能返回多条数据，此时返回Series对象
			Series['a']
			Series['a':'c']	注意：切片要求索引值唯一，
		方括号+下标值的方式读取对应的下标值得数据，下标值的取值范围为：[0,len(Series.values));另外下标值可以是负数，表示从右往左获取数据
			Series[1:]	下标值允许使用切片
			Series[-1]
	
	运算
		ndarray数组的绝大多数操作都可以应用到Series上，并且Series在进行数组运算之后，索引和值之间的映射关系不会发生改变。
			ser1[ser1>3]	取出ser1中所有大于3的元素
		自动对齐：
			Series之间运算会自动找对应的索引的元素进行加减乘除
	
	缺失值检测：
		pd.isnull(Series)和pd.notnull(Series)可以在用于在Series中检测缺失值，返回布尔型的Series
			ser1[pd.isnull(ser1)]	过滤出为缺失值得项
			ser1[pd.notnull(ser1)]	过滤出不是缺失值的项
	常用
		ser.unique() 返回去重后的list类型数据
		ser.value_count() 返回Series数据说明各各数据出现的频率，默认按出现频率降序排列
		ser.isin(['b','c']) 返回布尔型Series数据，可用于ser[mask]选出对应项
		
DataFrame：
	一个表格型的数据结构，包含一组有序的列，每列可以是不同的值类型，DataFrame既有行索引也有列索引，可以被看作是由Series组成的字典。
	
	创建方法：
		通过二维数组,index为每行的索引,columns为每列的索引
			pd.DataFrame(
				[[1,2,3],[4,5,6]],
				index=['one','two'],
				columns=['a','b','c']
				)
		通过字典方式创建,字典的键位DataFrame的columns值，字典的value为DataFrame的值
			pd.DataFrame(dic)
		通过读取文件创建DataFrame
			pd.read_csv(file,sep=',')
			
	属性：
		DataFrame.values 	返回数据的二维矩阵
		DataFrame.index 	返回行索引 序列
		DataFrame.columns	返回列索引 序列
	层次索引：
		df.set_index(['a','b'])
			a,b为columns中的元素
		创建DataFrame时index设置为2位list
		
	数据获取：
		DataFrame[column_name]
		DataFrame.ix[index_name]
		DataFrame.loc[行索引：行索引，列索引：列索引]
		DataFrame.iloc[数字索引：数字索引，数字索引：数字索引]
		DataFrame[columns[2:]]
	缺省值nan处理
		DataFrame.dropna()
			默认丢弃包含缺省值的行
			axis=1 丢弃列
		DataFrame.fillna
		DataFrame.isnull
		DataFrame.notnull
	常用的统计方法
		df.count			计算非NA值的数量
		df.describe			针对Series或各DataFrame列计算总统计值
		df.min/max			计算最大值、最小值
		df.argmin/argmax	计算能够获取到最小值和最大值的索引位置（整数）
		df.idxmin/idxmax	计算能够获取到的最小值和最大值
		df.quantile			计算样本的分位数（0到1）
		df.sum				值的总和
		df.mean				值得平均值
		df.median			值得中位数
		df.mad				根据平均值计算平均绝对距离差
		df.var				样本数值的方差
		df.std				标准差
		df.cumsum			样本的累加和
		df.cummin/cummax	样本的累积最小值、最大值
		df.cumprod			样本值得累计积
		df.pct_change		百分数变化
		df.corr()			相关系数
		df.cov()			协方差
		
		